{"version":3,"file":"static/js/main.13064fe4.js","mappings":"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","sources":["shared/constant.ts","components/NavBar.tsx","components/SideMenu.tsx","shared/utils.ts","components/BundleSizeDetail.tsx","components/Filters.tsx","shared/request.ts","components/ContentBundleSize.tsx","components/ContentCompileSpeed.tsx","components/Content.tsx","App.tsx"],"sourcesContent":["import type { LineOptions } from '@antv/g2plot';\n\nexport const MENU = {\n  BUNDLE_SIZE: 'bundle-size',\n  COMPILE_SPEED: 'compile-speed',\n};\n\nexport const BASE_PADDING = 24;\n\nexport const CASES = [\n  'mwa-minimal',\n  'mwa-initial',\n  'mwa-ssr',\n  'mwa-arco-pro',\n  'mwa-arco-pro-esbuild',\n];\n\nexport const BUNDLE_SIZE_DEFAULT_CASE = ['mwa-minimal', 'mwa-initial'];\nexport const COMPILE_SPEED_DEFAULT_CASE = [\n  'mwa-arco-pro',\n  'mwa-arco-pro-esbuild',\n];\n\nexport const BUNDLE_SIZE_METRICS = ['minifiedBundleSize', 'gzippedBundleSize'];\n\nexport const COMPILE_SPEED_METRICS = [\n  'buildColdBootTime',\n  'buildHotBootTime',\n  'buildPluginSetupTime',\n  'buildPrepareTime',\n  'devColdBootTime',\n  'devHotBootTime',\n  'devPluginSetupTime',\n  'devPrepareTime',\n];\n\nexport const COMMITS_INFO_URL = './data/commits-info.json';\n\nexport const LINE_CHART_DEFAULT_CONFIG: Partial<LineOptions> = {\n  height: 400,\n  seriesField: 'category',\n  xField: 'date',\n  xAxis: {\n    label: {\n      formatter: text => text.split(' ')[0],\n    },\n  },\n  point: {\n    size: 3,\n  },\n};\n","import styled from '@modern-js/runtime/styled';\nimport { IconGithub } from '@arco-design/web-react/icon';\nimport { BASE_PADDING } from '@/shared/constant';\n\nconst Root = styled.div`\n  position: fixed;\n  display: flex;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 56px;\n  padding: 4px ${BASE_PADDING}px;\n  background-color: #fff;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #e8e8e8;\n`;\n\nconst Left = styled.div`\n  display: flex;\n  font-size: 18px;\n  align-items: center;\n  color: #111;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n`;\n\nconst ImageWrapper = styled.div`\n  width: 48px;\n  height: 36px;\n  overflow: hidden;\n  margin-right: 16px;\n`;\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  font-size: 28px;\n  color: #222;\n`;\n\nconst GitHubIcon = () => (\n  <Link\n    target=\"_blank\"\n    href=\"https://github.com/modern-js-dev/modern-js-benchmark\"\n  >\n    <IconGithub />\n  </Link>\n);\n\nexport const NavBar = () => {\n  return (\n    <Root className=\"nav-bar\">\n      <Left>\n        <ImageWrapper>\n          <Image src=\"https://lf-cdn-tos.bytescm.com/obj/static/webinfra/modern-js-website/assets/images/images/modernjs-logo.svg\" />\n        </ImageWrapper>\n        Modern.js Benchmark\n      </Left>\n      <GitHubIcon />\n    </Root>\n  );\n};\n","import { Menu, MenuProps } from '@arco-design/web-react';\nimport styled from '@modern-js/runtime/styled';\nimport {\n  IconLink,\n  IconInteraction,\n  IconThunderbolt,\n} from '@arco-design/web-react/icon';\nimport { MENU } from '@/shared/constant';\n\nconst MenuItem = Menu.Item;\n\nconst Root = styled.div`\n  position: fixed;\n  top: 56px;\n  left: 0;\n  bottom: 0;\n  width: 260px;\n  background: #fff;\n`;\n\nconst BottomLink = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 0;\n  right: 6px;\n  text-align: center;\n`;\n\nconst itemStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  height: 48,\n  fontSize: 15,\n  marginBottom: 8,\n};\n\nexport const SideMenu = (props: {\n  onClickMenuItem: MenuProps['onClickMenuItem'];\n  defaultSelectedKey: string;\n}) => (\n  <Root>\n    <Menu\n      mode=\"vertical\"\n      style={{\n        padding: '16px 4px',\n      }}\n      onClickMenuItem={props.onClickMenuItem}\n      defaultSelectedKeys={[props.defaultSelectedKey]}\n    >\n      <MenuItem key={MENU.BUNDLE_SIZE} style={itemStyle}>\n        <IconInteraction style={{ fontSize: 20 }} />\n        Bundle Size\n      </MenuItem>\n      <MenuItem key={MENU.COMPILE_SPEED} style={itemStyle}>\n        <IconThunderbolt style={{ fontSize: 20 }} />\n        Compile Speed\n      </MenuItem>\n    </Menu>\n\n    <BottomLink>\n      <a\n        href=\"https://github.com/modern-js-dev/modern-js-benchmark/tree/gh-pages/data\"\n        target=\"_blank\"\n        style={{ color: '#2972b7' }}\n      >\n        <IconLink style={{ fontSize: 18, marginRight: 6, verticalAlign: -4 }} />\n        View Raw Data\n      </a>\n    </BottomLink>\n  </Root>\n);\n","import dayjs from 'dayjs';\nimport { FetchedMetrics } from './request';\n\nexport const formatDate = (time: number) =>\n  dayjs(time).format('YY-MM-DD HH:mm');\n\nexport const formatFileSize = (size: number) =>\n  Number((size / 1000).toFixed(2));\n\nexport const formatSecond = (ms: number) => Number((ms / 1000).toFixed(2));\n\nexport const mergeData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  [\n    ...data1.map(item => ({\n      ...item,\n      caseName: caseNames[0],\n      metricsName: metricsNames[0],\n    })),\n    ...data2.map(item => ({\n      ...item,\n      caseName: caseNames[1],\n      metricsName: metricsNames[1],\n    })),\n  ].sort((a, b) => a.time - b.time);\n","import { Card, Grid, Table, Typography } from '@arco-design/web-react';\nimport { BASE_PADDING } from '@/shared/constant';\nimport type { FetchedMetrics } from '@/shared/request';\nimport { formatFileSize } from '@/shared/utils';\n\nconst columns = [\n  {\n    title: 'File',\n    dataIndex: 'file',\n  },\n  {\n    title: 'Size',\n    dataIndex: 'size',\n  },\n];\n\nconst FileSizeTable = (props: {\n  data: FetchedMetrics[];\n  caseName: string;\n  metricsName: string;\n}) => {\n  const latestData = props.data[props.data.length - 1];\n  const { files } = latestData.metrics[props.metricsName];\n  const tableData = Object.keys(files)\n    .sort((key1, key2) => files[key2] - files[key1])\n    .map(key => ({\n      key,\n      file: key,\n      size: `${formatFileSize(files[key])} KB`,\n    }));\n  return (\n    <Grid.Col span={12}>\n      <Typography.Title heading={6} style={{ marginTop: 0 }}>\n        {props.caseName}\n      </Typography.Title>\n      <Table columns={columns} data={tableData} />\n    </Grid.Col>\n  );\n};\n\nexport const BundleSizeDetail = ({\n  data,\n  caseNames,\n  metricsNames,\n}: {\n  data: FetchedMetrics[][] | null;\n  caseNames: string[];\n  metricsNames: string[];\n}) => {\n  return (\n    <Card bordered={false} style={{ marginTop: BASE_PADDING }}>\n      <Typography.Title heading={5} style={{ marginTop: 0 }}>\n        File Detail\n      </Typography.Title>\n      Size of all files in the latest commit.\n      <Grid.Row gutter={40} style={{ marginTop: BASE_PADDING }}>\n        {data &&\n          data.map((singleData, index) => (\n            <FileSizeTable\n              key={caseNames[index] + metricsNames[index]}\n              data={singleData}\n              caseName={caseNames[index]}\n              metricsName={metricsNames[index]}\n            />\n          ))}\n      </Grid.Row>\n    </Card>\n  );\n};\n","import { BASE_PADDING, CASES } from '@/shared/constant';\nimport {\n  Card,\n  Grid,\n  Form,\n  Button,\n  Select,\n  FormProps,\n  Typography,\n} from '@arco-design/web-react';\n\nconst SelectGroup = ({\n  index,\n  metrics,\n  initialCase,\n}: {\n  index: number;\n  metrics: string[];\n  initialCase: string[];\n}) => {\n  return (\n    <>\n      <Typography.Title heading={6} style={{ marginTop: index > 1 ? 12 : 0 }}>\n        Group{index}:\n      </Typography.Title>\n      <Grid.Row gutter={40}>\n        <Grid.Col span={8}>\n          <Form.Item\n            label=\"Case\"\n            field={`caseName${index}`}\n            initialValue={initialCase[index - 1]}\n            style={{ marginBottom: 8 }}\n          >\n            <Select>\n              {CASES.map(caseName => (\n                <Select.Option key={caseName} value={caseName}>\n                  {caseName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Grid.Col>\n        <Grid.Col span={8}>\n          <Form.Item\n            label=\"Metrics\"\n            field={`metricsName${index}`}\n            initialValue={metrics[0]}\n            style={{ marginBottom: 8 }}\n          >\n            <Select>\n              {metrics.map(name => (\n                <Select.Option key={name} value={name}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Grid.Col>\n      </Grid.Row>\n    </>\n  );\n};\n\nexport const Filters = (props: {\n  metrics: string[];\n  onSubmit: FormProps['onSubmit'];\n  initialCase: string[];\n}) => {\n  return (\n    <Card bordered={false} style={{ marginBottom: BASE_PADDING }}>\n      <Form layout=\"horizontal\" labelAlign=\"left\" onSubmit={props.onSubmit}>\n        <SelectGroup {...props} index={1} />\n        <SelectGroup {...props} index={2} />\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{ width: 120, marginTop: 12 }}\n        >\n          Query\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n","import { COMMITS_INFO_URL } from './constant';\nimport type { Metrics } from '../../../scripts/src/shared/types';\n\nexport type CommitInfo = {\n  id: string;\n  time: number;\n};\n\nexport type FetchedMetrics = CommitInfo & {\n  metrics: Record<string, any>;\n};\n\nconst cache = new Map();\n\nconst fetchJsonWithCache = async (url: string) => {\n  if (cache.has(url)) {\n    return cache.get(url);\n  }\n  const data = await fetch(url)\n    .then(res => res.json())\n    .catch(() => {});\n  cache.set(url, data);\n  return data;\n};\n\nexport const fetchCommitsInfo = async () =>\n  fetchJsonWithCache(COMMITS_INFO_URL);\n\nexport const fetchMetrics = async (\n  caseName: string,\n): Promise<FetchedMetrics[]> => {\n  const commitsInfo: CommitInfo[] = await fetchCommitsInfo();\n\n  const allMetrics: Metrics[] = await Promise.all(\n    commitsInfo.map(info =>\n      fetchJsonWithCache(`./data/${info.id}/${caseName}.json`),\n    ),\n  );\n\n  return allMetrics\n    .map((metrics, index) => ({\n      ...commitsInfo[index],\n      metrics,\n    }))\n    .filter(item => !!item.metrics);\n};\n","import { Line } from '@antv/g2plot';\nimport { Card, Typography } from '@arco-design/web-react';\nimport { BundleSizeDetail } from './BundleSizeDetail';\nimport {\n  BUNDLE_SIZE_METRICS,\n  BUNDLE_SIZE_DEFAULT_CASE,\n  LINE_CHART_DEFAULT_CONFIG,\n  BASE_PADDING,\n} from '@/shared/constant';\nimport { Filters } from './Filters';\nimport { useEffect, useRef, useState } from 'react';\nimport { FetchedMetrics, fetchMetrics } from '@/shared/request';\nimport { formatDate, formatFileSize, mergeData } from '@/shared/utils';\n\nconst formatData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  mergeData(data1, data2, caseNames, metricsNames).map(item => ({\n    category: caseNames[0] === caseNames[1] ? item.metricsName : item.caseName,\n    date: `${formatDate(item.time)}（${item.id}）`,\n    size: formatFileSize(item.metrics[item.metricsName].total),\n  }));\n\nexport const ContentBundleSize = () => {\n  const chartRoot = useRef<HTMLDivElement | null>(null);\n  const chartInstance = useRef<Line | null>(null);\n  const [caseNames, setCaseNames] = useState(BUNDLE_SIZE_DEFAULT_CASE);\n  const [metricsNames, setMetricsNames] = useState([\n    BUNDLE_SIZE_METRICS[0],\n    BUNDLE_SIZE_METRICS[0],\n  ]);\n  const [data, setData] = useState<FetchedMetrics[][] | null>(null);\n\n  const renderLineChart = ({\n    root,\n    data1,\n    data2,\n    caseNames,\n    metricsNames,\n  }: {\n    root: HTMLElement | null;\n    data1: FetchedMetrics[];\n    data2: FetchedMetrics[];\n    caseNames: string[];\n    metricsNames: string[];\n  }) => {\n    const data = formatData(data1, data2, caseNames, metricsNames);\n    if (chartInstance.current) {\n      chartInstance.current.changeData(data);\n    } else if (root) {\n      chartInstance.current = new Line(root, {\n        ...LINE_CHART_DEFAULT_CONFIG,\n        data,\n        yField: 'size',\n        yAxis: {\n          label: {\n            formatter: text => `${text} KB`,\n          },\n        },\n        tooltip: {\n          fields: ['date', 'size', 'category'],\n          formatter: datum => ({\n            name: datum.category,\n            value: `${datum.size} KB`,\n          }),\n        },\n      });\n\n      chartInstance.current.render();\n    }\n  };\n\n  const onSubmitForm = (params: {\n    caseName1: string;\n    caseName2: string;\n    metricsName1: string;\n    metricsName2: string;\n  }) => {\n    setCaseNames([params.caseName1, params.caseName2]);\n    setMetricsNames([params.metricsName1, params.metricsName2]);\n  };\n\n  useEffect(() => {\n    Promise.all([fetchMetrics(caseNames[0]), fetchMetrics(caseNames[1])]).then(\n      ([data1, data2]) => {\n        setData([data1, data2]);\n        renderLineChart({\n          data1,\n          data2,\n          caseNames,\n          metricsNames,\n          root: chartRoot.current,\n        });\n      },\n    );\n  }, [caseNames, metricsNames]);\n\n  return (\n    <div style={{ padding: BASE_PADDING }}>\n      <Filters\n        metrics={BUNDLE_SIZE_METRICS}\n        initialCase={caseNames}\n        onSubmit={onSubmitForm}\n      />\n      <Card bordered={false} style={{ height: 464 }}>\n        <Typography.Title heading={5} style={{ marginTop: 0 }}>\n          Trending\n        </Typography.Title>\n        <div ref={chartRoot} />\n      </Card>\n      <BundleSizeDetail\n        data={data}\n        caseNames={caseNames}\n        metricsNames={metricsNames}\n      />\n    </div>\n  );\n};\n","import { Line } from '@antv/g2plot';\nimport { Card, Typography } from '@arco-design/web-react';\nimport {\n  COMPILE_SPEED_METRICS,\n  COMPILE_SPEED_DEFAULT_CASE,\n  LINE_CHART_DEFAULT_CONFIG,\n  BASE_PADDING,\n} from '@/shared/constant';\nimport { Filters } from './Filters';\nimport { useEffect, useRef, useState } from 'react';\nimport { FetchedMetrics, fetchMetrics } from '@/shared/request';\nimport { formatDate, formatSecond, mergeData } from '@/shared/utils';\n\nconst formatData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  mergeData(data1, data2, caseNames, metricsNames).map(item => ({\n    category: caseNames[0] === caseNames[1] ? item.metricsName : item.caseName,\n    date: `${formatDate(item.time)}（${item.id}）`,\n    time: formatSecond(item.metrics[item.metricsName]),\n  }));\n\nexport const ContentCompileSpeed = () => {\n  const chartRoot = useRef<HTMLDivElement | null>(null);\n  const chartInstance = useRef<Line | null>(null);\n  const [caseNames, setCaseNames] = useState(COMPILE_SPEED_DEFAULT_CASE);\n  const [metricsNames, setMetricsNames] = useState([\n    COMPILE_SPEED_METRICS[0],\n    COMPILE_SPEED_METRICS[0],\n  ]);\n\n  const renderLineChart = ({\n    root,\n    data1,\n    data2,\n    caseNames,\n    metricsNames,\n  }: {\n    root: HTMLElement | null;\n    data1: FetchedMetrics[];\n    data2: FetchedMetrics[];\n    caseNames: string[];\n    metricsNames: string[];\n  }) => {\n    const data = formatData(data1, data2, caseNames, metricsNames);\n    if (chartInstance.current) {\n      chartInstance.current.changeData(data);\n    } else if (root) {\n      chartInstance.current = new Line(root, {\n        ...LINE_CHART_DEFAULT_CONFIG,\n        data,\n        yField: 'time',\n        yAxis: {\n          label: {\n            formatter: text => `${text} s`,\n          },\n        },\n        tooltip: {\n          fields: ['date', 'time', 'category'],\n          formatter: datum => ({\n            name: datum.category,\n            value: datum.time + 's',\n          }),\n        },\n      });\n\n      chartInstance.current.render();\n    }\n  };\n\n  const onSubmitForm = (params: {\n    caseName1: string;\n    caseName2: string;\n    metricsName1: string;\n    metricsName2: string;\n  }) => {\n    setCaseNames([params.caseName1, params.caseName2]);\n    setMetricsNames([params.metricsName1, params.metricsName2]);\n  };\n\n  useEffect(() => {\n    Promise.all([fetchMetrics(caseNames[0]), fetchMetrics(caseNames[1])]).then(\n      ([data1, data2]) => {\n        renderLineChart({\n          data1,\n          data2,\n          caseNames,\n          metricsNames,\n          root: chartRoot.current,\n        });\n      },\n    );\n  }, [caseNames, metricsNames]);\n\n  return (\n    <div style={{ padding: BASE_PADDING }}>\n      <Filters\n        metrics={COMPILE_SPEED_METRICS}\n        initialCase={caseNames}\n        onSubmit={onSubmitForm}\n      />\n      <Card bordered={false} style={{ height: 464 }}>\n        <Typography.Title heading={5} style={{ marginTop: 0 }}>\n          Trending\n        </Typography.Title>\n        <div ref={chartRoot} />\n      </Card>\n    </div>\n  );\n};\n","import { MENU } from '@/shared/constant';\nimport { ContentBundleSize } from './ContentBundleSize';\nimport { ContentCompileSpeed } from './ContentCompileSpeed';\n\nexport const Content = (props: { menuIndex: string }) => {\n  const renderSubContent = () => {\n    switch (props.menuIndex) {\n      case MENU.BUNDLE_SIZE:\n        return <ContentBundleSize />;\n      case MENU.COMPILE_SPEED:\n        return <ContentCompileSpeed />;\n    }\n    return null;\n  };\n\n  return (\n    <div style={{ marginLeft: 260, marginTop: 56 }}>{renderSubContent()}</div>\n  );\n};\n","import '@arco-design/web-react/dist/css/arco.css';\nimport './App.scss';\nimport styled from '@modern-js/runtime/styled';\nimport { NavBar } from './components/NavBar';\nimport { SideMenu } from './components/SideMenu';\nimport { Content } from './components/Content';\nimport { useState } from 'react';\nimport { MENU } from './shared/constant';\n\nconst Container = styled.div`\n  min-height: 100vh;\n`;\n\nconst App = () => {\n  const [menuIndex, setMenuIndex] = useState(MENU.BUNDLE_SIZE);\n\n  return (\n    <Container>\n      <NavBar />\n      <SideMenu defaultSelectedKey={menuIndex} onClickMenuItem={setMenuIndex} />\n      <Content menuIndex={menuIndex} />\n    </Container>\n  );\n};\n\nexport default App;\n"],"names":["MENU","BASE_PADDING","CASES","BUNDLE_SIZE_DEFAULT_CASE","COMPILE_SPEED_DEFAULT_CASE","BUNDLE_SIZE_METRICS","COMPILE_SPEED_METRICS","LINE_CHART_DEFAULT_CONFIG","height","seriesField","xField","xAxis","label","formatter","text","split","point","size","Root","styled","Left","Image","ImageWrapper","Link","GitHubIcon","target","href","IconGithub","NavBar","className","src","MenuItem","Menu","BottomLink","itemStyle","display","alignItems","fontSize","marginBottom","SideMenu","props","mode","style","padding","onClickMenuItem","defaultSelectedKeys","defaultSelectedKey","IconInteraction","IconThunderbolt","color","IconLink","marginRight","verticalAlign","formatDate","time","dayjs","format","formatFileSize","Number","toFixed","mergeData","data1","data2","caseNames","metricsNames","map","item","caseName","metricsName","sort","a","b","columns","title","dataIndex","FileSizeTable","files","data","length","metrics","tableData","Object","keys","key1","key2","key","file","Grid","span","Typography","heading","marginTop","Table","BundleSizeDetail","Card","bordered","gutter","singleData","index","SelectGroup","initialCase","Form","field","initialValue","Select","value","name","Filters","layout","labelAlign","onSubmit","Button","type","htmlType","width","cache","Map","fetchJsonWithCache","url","has","get","fetch","then","res","json","set","fetchCommitsInfo","fetchMetrics","commitsInfo","Promise","all","info","id","allMetrics","filter","ContentBundleSize","chartRoot","useRef","chartInstance","useState","setCaseNames","setMetricsNames","setData","renderLineChart","root","category","date","total","formatData","current","changeData","Line","yField","yAxis","tooltip","fields","datum","render","useEffect","params","caseName1","caseName2","metricsName1","metricsName2","ref","ContentCompileSpeed","ms","Content","marginLeft","menuIndex","renderSubContent","Container","setMenuIndex"],"sourceRoot":""}