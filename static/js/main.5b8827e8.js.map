{"version":3,"file":"static/js/main.5b8827e8.js","mappings":"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","sources":["shared/constant.ts","components/NavBar.tsx","components/SideMenu.tsx","shared/utils.ts","components/BundleSizeDetail.tsx","components/Filters.tsx","shared/request.ts","components/ContentBundleSize.tsx","components/ContentCompileSpeed.tsx","components/ContentInstallSpeed.tsx","components/Content.tsx","App.tsx"],"sourcesContent":["import type { LineOptions } from '@antv/g2plot';\n\nexport const MENU = {\n  BUNDLE_SIZE: 'bundle-size',\n  COMPILE_SPEED: 'compile-speed',\n  INSTALL_SPEED: 'install-speed',\n};\n\nexport const BASE_PADDING = 24;\n\nexport const CASES = [\n  'mwa-minimal',\n  'mwa-initial',\n  'mwa-ssr',\n  'mwa-arco-pro',\n  'mwa-arco-pro-esbuild',\n];\n\nexport const BUNDLE_SIZE_DEFAULT_CASE = ['mwa-minimal', 'mwa-initial'];\nexport const BUNDLE_SIZE_METRICS = ['minifiedBundleSize', 'gzippedBundleSize'];\n\nexport const COMPILE_SPEED_DEFAULT_CASE = [\n  'mwa-arco-pro',\n  'mwa-arco-pro-esbuild',\n];\nexport const COMPILE_SPEED_METRICS = [\n  'buildColdBootTime',\n  'buildHotBootTime',\n  'buildPluginSetupTime',\n  'buildPrepareTime',\n  'devColdBootTime',\n  'devHotBootTime',\n  'devPluginSetupTime',\n  'devPrepareTime',\n];\n\nexport const INSTALL_SPEED_DEFAULT_CASE = ['mwa-minimal', 'mwa-initial'];\nexport const INSTALL_SPEED_METRICS = [\n  'yarnInstallSize',\n  'yarnHotInstallTime',\n  'yarnColdInstallTime',\n  'yarnDependenciesCount',\n];\n\nexport const COMMITS_INFO_URL = './data/commits-info.json';\n\nexport const LINE_CHART_DEFAULT_CONFIG: Partial<LineOptions> = {\n  height: 400,\n  seriesField: 'category',\n  xField: 'x',\n  yField: 'y',\n  xAxis: {\n    label: {\n      formatter: text => text.split(' ')[0],\n    },\n  },\n  point: {\n    size: 3,\n  },\n};\n","import styled from '@modern-js/runtime/styled';\nimport { IconGithub } from '@arco-design/web-react/icon';\nimport { BASE_PADDING } from '@/shared/constant';\n\nconst Root = styled.div`\n  position: fixed;\n  display: flex;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 56px;\n  padding: 4px ${BASE_PADDING}px;\n  background-color: #fff;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #e8e8e8;\n`;\n\nconst Left = styled.div`\n  display: flex;\n  font-size: 18px;\n  align-items: center;\n  color: #111;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n`;\n\nconst ImageWrapper = styled.div`\n  width: 48px;\n  height: 36px;\n  overflow: hidden;\n  margin-right: 16px;\n`;\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  font-size: 28px;\n  color: #222;\n`;\n\nconst GitHubIcon = () => (\n  <Link\n    target=\"_blank\"\n    href=\"https://github.com/modern-js-dev/modern-js-benchmark\"\n  >\n    <IconGithub />\n  </Link>\n);\n\nexport const NavBar = () => {\n  return (\n    <Root className=\"nav-bar\">\n      <Left>\n        <ImageWrapper>\n          <Image src=\"https://lf-cdn-tos.bytescm.com/obj/static/webinfra/modern-js-website/assets/images/images/modernjs-logo.svg\" />\n        </ImageWrapper>\n        Modern.js Benchmark\n      </Left>\n      <GitHubIcon />\n    </Root>\n  );\n};\n","import { Menu, MenuProps } from '@arco-design/web-react';\nimport styled from '@modern-js/runtime/styled';\nimport {\n  IconLink,\n  IconInteraction,\n  IconThunderbolt,\n  IconCloudDownload,\n} from '@arco-design/web-react/icon';\nimport { MENU } from '@/shared/constant';\n\nconst MenuItem = Menu.Item;\n\nconst Root = styled.div`\n  position: fixed;\n  top: 56px;\n  left: 0;\n  bottom: 0;\n  width: 260px;\n  background: #fff;\n`;\n\nconst BottomLink = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 0;\n  right: 6px;\n  text-align: center;\n`;\n\nconst itemStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  height: 48,\n  fontSize: 15,\n  marginBottom: 8,\n};\n\nexport const SideMenu = (props: {\n  onClickMenuItem: MenuProps['onClickMenuItem'];\n  defaultSelectedKey: string;\n}) => (\n  <Root>\n    <Menu\n      mode=\"vertical\"\n      style={{\n        padding: '16px 4px',\n      }}\n      onClickMenuItem={props.onClickMenuItem}\n      defaultSelectedKeys={[props.defaultSelectedKey]}\n    >\n      <MenuItem key={MENU.BUNDLE_SIZE} style={itemStyle}>\n        <IconInteraction style={{ fontSize: 20 }} />\n        Bundle Size\n      </MenuItem>\n      <MenuItem key={MENU.COMPILE_SPEED} style={itemStyle}>\n        <IconThunderbolt style={{ fontSize: 20 }} />\n        Compile Speed\n      </MenuItem>\n      <MenuItem key={MENU.INSTALL_SPEED} style={itemStyle}>\n        <IconCloudDownload style={{ fontSize: 20 }} />\n        Install Speed\n      </MenuItem>\n    </Menu>\n\n    <BottomLink>\n      <a\n        href=\"https://github.com/modern-js-dev/modern-js-benchmark/tree/gh-pages/data\"\n        target=\"_blank\"\n        style={{ color: '#2972b7' }}\n      >\n        <IconLink style={{ fontSize: 18, marginRight: 6, verticalAlign: -4 }} />\n        View Raw Data\n      </a>\n    </BottomLink>\n  </Root>\n);\n","import dayjs from 'dayjs';\nimport { FetchedMetrics } from './request';\n\nexport const formatDate = (time: number) =>\n  dayjs(time).format('YY-MM-DD HH:mm');\n\nexport const formatDateWithId = (item: FetchedMetrics) =>\n  `${formatDate(item.time)}（${item.id}）`;\n\nexport const formatFileSize = (size: number, target = 'KB') => {\n  if (target === 'KB') {\n    size = size / 1024;\n  } else if (target === 'MB') {\n    size = size / 1024 / 1024;\n  }\n  return Number(size.toFixed(2));\n};\n\nexport const formatSecond = (ms: number) => Number((ms / 1000).toFixed(2));\n\nexport const mergeData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  [\n    ...data1.map(item => ({\n      ...item,\n      caseName: caseNames[0],\n      metricsName: metricsNames[0],\n    })),\n    ...data2.map(item => ({\n      ...item,\n      caseName: caseNames[1],\n      metricsName: metricsNames[1],\n    })),\n  ]\n    .sort((a, b) => a.time - b.time)\n    .filter(item => item.metrics[item.metricsName]);\n","import { Card, Grid, Table, Typography } from '@arco-design/web-react';\nimport { BASE_PADDING } from '@/shared/constant';\nimport type { FetchedMetrics } from '@/shared/request';\nimport { formatFileSize } from '@/shared/utils';\n\nconst columns = [\n  {\n    title: 'File',\n    dataIndex: 'file',\n  },\n  {\n    title: 'Size',\n    dataIndex: 'size',\n  },\n];\n\nconst FileSizeTable = (props: {\n  data: FetchedMetrics[];\n  caseName: string;\n  metricsName: string;\n}) => {\n  const latestData = props.data[props.data.length - 1];\n  const { files } = latestData.metrics[props.metricsName];\n  const tableData = Object.keys(files)\n    .sort((key1, key2) => files[key2] - files[key1])\n    .map(key => ({\n      key,\n      file: key,\n      size: `${formatFileSize(files[key])} KB`,\n    }));\n  return (\n    <Grid.Col span={12}>\n      <Typography.Title heading={6} style={{ marginTop: 0 }}>\n        {props.caseName}\n      </Typography.Title>\n      <Table columns={columns} data={tableData} />\n    </Grid.Col>\n  );\n};\n\nexport const BundleSizeDetail = ({\n  data,\n  caseNames,\n  metricsNames,\n}: {\n  data: FetchedMetrics[][] | null;\n  caseNames: string[];\n  metricsNames: string[];\n}) => {\n  return (\n    <Card bordered={false} style={{ marginTop: BASE_PADDING }}>\n      <Typography.Title heading={5} style={{ marginTop: 0 }}>\n        File Detail\n      </Typography.Title>\n      Size of all files in the latest commit.\n      <Grid.Row gutter={40} style={{ marginTop: BASE_PADDING }}>\n        {data &&\n          data.map((singleData, index) => (\n            <FileSizeTable\n              key={caseNames[index] + metricsNames[index]}\n              data={singleData}\n              caseName={caseNames[index]}\n              metricsName={metricsNames[index]}\n            />\n          ))}\n      </Grid.Row>\n    </Card>\n  );\n};\n","import { BASE_PADDING, CASES } from '@/shared/constant';\nimport {\n  Card,\n  Grid,\n  Form,\n  Button,\n  Select,\n  FormProps,\n  Typography,\n} from '@arco-design/web-react';\nimport { useState } from 'react';\n\nconst SelectGroup = ({\n  index,\n  metrics,\n  initialCase,\n}: {\n  index: number;\n  metrics: string[];\n  initialCase: string[];\n}) => {\n  return (\n    <>\n      <Typography.Title heading={6} style={{ marginTop: index > 1 ? 12 : 0 }}>\n        Group{index}:\n      </Typography.Title>\n      <Grid.Row gutter={40}>\n        <Grid.Col span={8}>\n          <Form.Item\n            label=\"Case\"\n            field={`caseName${index}`}\n            initialValue={initialCase[index - 1]}\n            style={{ marginBottom: 8 }}\n          >\n            <Select>\n              {CASES.map(caseName => (\n                <Select.Option key={caseName} value={caseName}>\n                  {caseName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Grid.Col>\n        <Grid.Col span={8}>\n          <Form.Item\n            label=\"Metrics\"\n            field={`metricsName${index}`}\n            initialValue={metrics[0]}\n            style={{ marginBottom: 8 }}\n          >\n            <Select>\n              {metrics.map(name => (\n                <Select.Option key={name} value={name}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Grid.Col>\n      </Grid.Row>\n    </>\n  );\n};\n\nexport const Filters = (props: {\n  metrics: string[];\n  onSubmit: FormProps['onSubmit'];\n  initialCase: string[];\n}) => {\n  return (\n    <Card bordered={false} style={{ marginBottom: BASE_PADDING }}>\n      <Form layout=\"horizontal\" labelAlign=\"left\" onSubmit={props.onSubmit}>\n        <SelectGroup {...props} index={1} />\n        <SelectGroup {...props} index={2} />\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{ width: 120, marginTop: 12 }}\n        >\n          Query\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport const useFilterResult = (\n  defaultCaseNames: string[],\n  defaultMetricsName: string,\n) => {\n  const [caseNames, setCaseNames] = useState(defaultCaseNames);\n  const [metricsNames, setMetricsNames] = useState([\n    defaultMetricsName,\n    defaultMetricsName,\n  ]);\n\n  const onSubmitForm = (params: {\n    caseName1: string;\n    caseName2: string;\n    metricsName1: string;\n    metricsName2: string;\n  }) => {\n    setCaseNames([params.caseName1, params.caseName2]);\n    setMetricsNames([params.metricsName1, params.metricsName2]);\n  };\n\n  return {\n    caseNames,\n    metricsNames,\n    onSubmitForm,\n  };\n};\n","import { COMMITS_INFO_URL } from './constant';\nimport type { Metrics } from '../../../scripts/src/shared/types';\n\nexport type CommitInfo = {\n  id: string;\n  time: number;\n};\n\nexport type FetchedMetrics = CommitInfo & {\n  metrics: Record<string, any>;\n};\n\nconst cache = new Map();\n\nconst fetchJsonWithCache = async (url: string) => {\n  if (cache.has(url)) {\n    return cache.get(url);\n  }\n  const data = await fetch(url)\n    .then(res => res.json())\n    .catch(() => {});\n  cache.set(url, data);\n  return data;\n};\n\nexport const fetchCommitsInfo = async () =>\n  fetchJsonWithCache(COMMITS_INFO_URL);\n\nexport const fetchMetrics = async (\n  caseName: string,\n): Promise<FetchedMetrics[]> => {\n  const commitsInfo: CommitInfo[] = await fetchCommitsInfo();\n\n  const allMetrics: Metrics[] = await Promise.all(\n    commitsInfo.map(info =>\n      fetchJsonWithCache(`./data/${info.id}/${caseName}.json`),\n    ),\n  );\n\n  return allMetrics\n    .map((metrics, index) => ({\n      ...commitsInfo[index],\n      metrics,\n    }))\n    .filter(item => !!item.metrics);\n};\n","import { Line } from '@antv/g2plot';\nimport { Card, Typography } from '@arco-design/web-react';\nimport { BundleSizeDetail } from './BundleSizeDetail';\nimport {\n  BUNDLE_SIZE_METRICS,\n  BUNDLE_SIZE_DEFAULT_CASE,\n  LINE_CHART_DEFAULT_CONFIG,\n  BASE_PADDING,\n} from '@/shared/constant';\nimport { Filters, useFilterResult } from './Filters';\nimport { useEffect, useRef, useState } from 'react';\nimport { FetchedMetrics, fetchMetrics } from '@/shared/request';\nimport { formatDateWithId, formatFileSize, mergeData } from '@/shared/utils';\n\nconst formatData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  mergeData(data1, data2, caseNames, metricsNames).map(item => ({\n    category: caseNames[0] === caseNames[1] ? item.metricsName : item.caseName,\n    x: formatDateWithId(item),\n    y: formatFileSize(item.metrics[item.metricsName].total),\n  }));\n\nexport const ContentBundleSize = () => {\n  const chartRoot = useRef<HTMLDivElement | null>(null);\n  const chartInstance = useRef<Line | null>(null);\n  const { caseNames, metricsNames, onSubmitForm } = useFilterResult(\n    BUNDLE_SIZE_DEFAULT_CASE,\n    BUNDLE_SIZE_METRICS[0],\n  );\n  const [data, setData] = useState<FetchedMetrics[][] | null>(null);\n\n  const renderLineChart = ({\n    root,\n    data1,\n    data2,\n    caseNames,\n    metricsNames,\n  }: {\n    root: HTMLElement | null;\n    data1: FetchedMetrics[];\n    data2: FetchedMetrics[];\n    caseNames: string[];\n    metricsNames: string[];\n  }) => {\n    const data = formatData(data1, data2, caseNames, metricsNames);\n    if (chartInstance.current) {\n      chartInstance.current.changeData(data);\n    } else if (root) {\n      chartInstance.current = new Line(root, {\n        ...LINE_CHART_DEFAULT_CONFIG,\n        data,\n\n        yAxis: {\n          label: {\n            formatter: text => `${text} KB`,\n          },\n        },\n        tooltip: {\n          fields: ['x', 'y', 'category'],\n          formatter: datum => ({\n            name: datum.category,\n            value: `${datum.y} KB`,\n          }),\n        },\n      });\n\n      chartInstance.current.render();\n    }\n  };\n\n  useEffect(() => {\n    Promise.all([fetchMetrics(caseNames[0]), fetchMetrics(caseNames[1])]).then(\n      ([data1, data2]) => {\n        setData([data1, data2]);\n        renderLineChart({\n          data1,\n          data2,\n          caseNames,\n          metricsNames,\n          root: chartRoot.current,\n        });\n      },\n    );\n  }, [caseNames, metricsNames]);\n\n  return (\n    <div style={{ padding: BASE_PADDING }}>\n      <Filters\n        metrics={BUNDLE_SIZE_METRICS}\n        initialCase={caseNames}\n        onSubmit={onSubmitForm}\n      />\n      <Card bordered={false} style={{ height: 464 }}>\n        <Typography.Title heading={5} style={{ marginTop: 0 }}>\n          Trending\n        </Typography.Title>\n        <div ref={chartRoot} />\n      </Card>\n      <BundleSizeDetail\n        data={data}\n        caseNames={caseNames}\n        metricsNames={metricsNames}\n      />\n    </div>\n  );\n};\n","import { Line } from '@antv/g2plot';\nimport { Card, Typography } from '@arco-design/web-react';\nimport {\n  COMPILE_SPEED_METRICS,\n  COMPILE_SPEED_DEFAULT_CASE,\n  LINE_CHART_DEFAULT_CONFIG,\n  BASE_PADDING,\n} from '@/shared/constant';\nimport { Filters, useFilterResult } from './Filters';\nimport { useEffect, useRef } from 'react';\nimport { FetchedMetrics, fetchMetrics } from '@/shared/request';\nimport { formatDateWithId, formatSecond, mergeData } from '@/shared/utils';\n\nconst formatData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  mergeData(data1, data2, caseNames, metricsNames).map(item => ({\n    category: caseNames[0] === caseNames[1] ? item.metricsName : item.caseName,\n    x: formatDateWithId(item),\n    y: formatSecond(item.metrics[item.metricsName]),\n  }));\n\nexport const ContentCompileSpeed = () => {\n  const chartRoot = useRef<HTMLDivElement | null>(null);\n  const chartInstance = useRef<Line | null>(null);\n  const { caseNames, metricsNames, onSubmitForm } = useFilterResult(\n    COMPILE_SPEED_DEFAULT_CASE,\n    COMPILE_SPEED_METRICS[0],\n  );\n\n  const renderLineChart = ({\n    root,\n    data1,\n    data2,\n    caseNames,\n    metricsNames,\n  }: {\n    root: HTMLElement | null;\n    data1: FetchedMetrics[];\n    data2: FetchedMetrics[];\n    caseNames: string[];\n    metricsNames: string[];\n  }) => {\n    const data = formatData(data1, data2, caseNames, metricsNames);\n    if (chartInstance.current) {\n      chartInstance.current.changeData(data);\n    } else if (root) {\n      chartInstance.current = new Line(root, {\n        ...LINE_CHART_DEFAULT_CONFIG,\n        data,\n        yAxis: {\n          label: {\n            formatter: text => `${text} s`,\n          },\n        },\n        tooltip: {\n          fields: ['x', 'y', 'category'],\n          formatter: datum => ({\n            name: datum.category,\n            value: datum.y + 's',\n          }),\n        },\n      });\n\n      chartInstance.current.render();\n    }\n  };\n\n  useEffect(() => {\n    Promise.all([fetchMetrics(caseNames[0]), fetchMetrics(caseNames[1])]).then(\n      ([data1, data2]) => {\n        renderLineChart({\n          data1,\n          data2,\n          caseNames,\n          metricsNames,\n          root: chartRoot.current,\n        });\n      },\n    );\n  }, [caseNames, metricsNames]);\n\n  return (\n    <div style={{ padding: BASE_PADDING }}>\n      <Filters\n        metrics={COMPILE_SPEED_METRICS}\n        initialCase={caseNames}\n        onSubmit={onSubmitForm}\n      />\n      <Card bordered={false} style={{ height: 464 }}>\n        <Typography.Title heading={5} style={{ marginTop: 0 }}>\n          Trending\n        </Typography.Title>\n        <div ref={chartRoot} />\n      </Card>\n    </div>\n  );\n};\n","import { Line } from '@antv/g2plot';\nimport { Card, Typography } from '@arco-design/web-react';\nimport {\n  BASE_PADDING,\n  INSTALL_SPEED_METRICS,\n  INSTALL_SPEED_DEFAULT_CASE,\n  LINE_CHART_DEFAULT_CONFIG,\n} from '@/shared/constant';\nimport { Filters, useFilterResult } from './Filters';\nimport { useEffect, useRef } from 'react';\nimport { FetchedMetrics, fetchMetrics } from '@/shared/request';\nimport {\n  mergeData,\n  formatSecond,\n  formatFileSize,\n  formatDateWithId,\n} from '@/shared/utils';\n\nconst formatData = (\n  data1: FetchedMetrics[],\n  data2: FetchedMetrics[],\n  caseNames: string[],\n  metricsNames: string[],\n) =>\n  mergeData(data1, data2, caseNames, metricsNames).map(item => {\n    let y: number;\n    const initialValue = item.metrics[item.metricsName];\n\n    switch (item.metricsName) {\n      case 'yarnInstallSize':\n        y = formatFileSize(initialValue, 'MB');\n        break;\n      case 'yarnHotInstallTime':\n      case 'yarnColdInstallTime':\n        y = formatSecond(initialValue);\n        break;\n      default:\n        y = initialValue;\n        break;\n    }\n\n    return {\n      metricsName: item.metricsName,\n      category:\n        caseNames[0] === caseNames[1] ? item.metricsName : item.caseName,\n      x: formatDateWithId(item),\n      y,\n    };\n  });\n\nexport const ContentInstallSpeed = () => {\n  const chartRoot = useRef<HTMLDivElement | null>(null);\n  const chartInstance = useRef<Line | null>(null);\n  const { caseNames, metricsNames, onSubmitForm } = useFilterResult(\n    INSTALL_SPEED_DEFAULT_CASE,\n    INSTALL_SPEED_METRICS[0],\n  );\n\n  const renderLineChart = ({\n    root,\n    data1,\n    data2,\n    caseNames,\n    metricsNames,\n  }: {\n    root: HTMLElement | null;\n    data1: FetchedMetrics[];\n    data2: FetchedMetrics[];\n    caseNames: string[];\n    metricsNames: string[];\n  }) => {\n    const data = formatData(data1, data2, caseNames, metricsNames);\n    if (chartInstance.current) {\n      chartInstance.current.changeData(data);\n    } else if (root) {\n      chartInstance.current = new Line(root, {\n        ...LINE_CHART_DEFAULT_CONFIG,\n        data,\n        tooltip: {\n          fields: ['x', 'y', 'category', 'metricsName'],\n          formatter: datum => {\n            let value = datum.y;\n            if (datum.metricsName === 'yarnInstallSize') {\n              value += 'MB';\n            }\n            if (\n              datum.metricsName === 'yarnColdInstallTime' ||\n              datum.metricsName === 'yarnHotInstallTime'\n            ) {\n              value += 's';\n            }\n            return {\n              name: datum.category,\n              value,\n            };\n          },\n        },\n      });\n\n      chartInstance.current.render();\n    }\n  };\n\n  useEffect(() => {\n    Promise.all([fetchMetrics(caseNames[0]), fetchMetrics(caseNames[1])]).then(\n      ([data1, data2]) => {\n        renderLineChart({\n          data1,\n          data2,\n          caseNames,\n          metricsNames,\n          root: chartRoot.current,\n        });\n      },\n    );\n  }, [caseNames, metricsNames]);\n\n  return (\n    <div style={{ padding: BASE_PADDING }}>\n      <Filters\n        metrics={INSTALL_SPEED_METRICS}\n        initialCase={caseNames}\n        onSubmit={onSubmitForm}\n      />\n      <Card bordered={false} style={{ height: 464 }}>\n        <Typography.Title heading={5} style={{ marginTop: 0 }}>\n          Trending\n        </Typography.Title>\n        <div ref={chartRoot} />\n      </Card>\n    </div>\n  );\n};\n","import { MENU } from '@/shared/constant';\nimport { ContentBundleSize } from './ContentBundleSize';\nimport { ContentCompileSpeed } from './ContentCompileSpeed';\nimport { ContentInstallSpeed } from './ContentInstallSpeed';\n\nexport const Content = (props: { menuIndex: string }) => {\n  const renderSubContent = () => {\n    switch (props.menuIndex) {\n      case MENU.BUNDLE_SIZE:\n        return <ContentBundleSize />;\n      case MENU.COMPILE_SPEED:\n        return <ContentCompileSpeed />;\n      case MENU.INSTALL_SPEED:\n        return <ContentInstallSpeed />;\n    }\n    return null;\n  };\n\n  return (\n    <div style={{ marginLeft: 260, marginTop: 56 }}>{renderSubContent()}</div>\n  );\n};\n","import '@arco-design/web-react/dist/css/arco.css';\nimport './App.scss';\nimport styled from '@modern-js/runtime/styled';\nimport { NavBar } from './components/NavBar';\nimport { SideMenu } from './components/SideMenu';\nimport { Content } from './components/Content';\nimport { useState } from 'react';\nimport { MENU } from './shared/constant';\n\nconst Container = styled.div`\n  min-height: 100vh;\n`;\n\nconst App = () => {\n  const [menuIndex, setMenuIndex] = useState(MENU.BUNDLE_SIZE);\n\n  return (\n    <Container>\n      <NavBar />\n      <SideMenu defaultSelectedKey={menuIndex} onClickMenuItem={setMenuIndex} />\n      <Content menuIndex={menuIndex} />\n    </Container>\n  );\n};\n\nexport default App;\n"],"names":["MENU","BASE_PADDING","CASES","BUNDLE_SIZE_DEFAULT_CASE","BUNDLE_SIZE_METRICS","COMPILE_SPEED_DEFAULT_CASE","COMPILE_SPEED_METRICS","INSTALL_SPEED_DEFAULT_CASE","INSTALL_SPEED_METRICS","LINE_CHART_DEFAULT_CONFIG","height","seriesField","xField","yField","xAxis","label","formatter","text","split","point","size","Root","styled","Left","Image","ImageWrapper","Link","GitHubIcon","target","href","IconGithub","NavBar","className","src","MenuItem","Menu","BottomLink","itemStyle","display","alignItems","fontSize","marginBottom","SideMenu","props","mode","style","padding","onClickMenuItem","defaultSelectedKeys","defaultSelectedKey","IconInteraction","IconThunderbolt","IconCloudDownload","color","IconLink","marginRight","verticalAlign","formatDateWithId","item","time","dayjs","format","id","formatFileSize","Number","toFixed","formatSecond","ms","mergeData","data1","data2","caseNames","metricsNames","map","caseName","metricsName","sort","a","b","filter","metrics","columns","title","dataIndex","FileSizeTable","files","data","length","tableData","Object","keys","key1","key2","key","file","Grid","span","Typography","heading","marginTop","Table","BundleSizeDetail","Card","bordered","gutter","singleData","index","SelectGroup","initialCase","Form","field","initialValue","Select","value","name","Filters","layout","labelAlign","onSubmit","Button","type","htmlType","width","useFilterResult","defaultCaseNames","defaultMetricsName","useState","setCaseNames","setMetricsNames","onSubmitForm","params","caseName1","caseName2","metricsName1","metricsName2","cache","Map","fetchJsonWithCache","url","has","get","fetch","then","res","json","set","fetchCommitsInfo","fetchMetrics","commitsInfo","Promise","all","info","allMetrics","ContentBundleSize","chartRoot","useRef","chartInstance","setData","renderLineChart","root","category","x","y","total","formatData","current","changeData","Line","yAxis","tooltip","fields","datum","render","useEffect","ref","ContentCompileSpeed","ContentInstallSpeed","Content","marginLeft","menuIndex","renderSubContent","Container","setMenuIndex"],"sourceRoot":""}